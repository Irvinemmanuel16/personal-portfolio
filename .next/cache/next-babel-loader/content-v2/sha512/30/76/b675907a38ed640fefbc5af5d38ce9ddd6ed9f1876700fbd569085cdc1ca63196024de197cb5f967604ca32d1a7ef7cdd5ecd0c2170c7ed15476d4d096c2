{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/irvinemmanuel/projects/portfolio/pages/projects/[name].js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport Head from 'next/head';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport { Hero, Info, Details, MockUps, BthButton, FooterPhrase } from '../../components/projectsComponents';\nexport var __N_SSG = true;\nexport default function Project({\n  project\n}) {\n  _s();\n\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hola\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Project, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["/home/irvinemmanuel/projects/portfolio/pages/projects/[name].js"],"names":["useEffect","Head","Header","Footer","Hero","Info","Details","MockUps","BthButton","FooterPhrase","Project","project","window","scrollTo","top","left","behavior"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,OAHF,EAIEC,OAJF,EAKEC,SALF,EAMEC,YANF,QAOO,qCAPP;;AAUA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AAAA;;AAC3CX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,MAAM,CAACC,QAAP,CAAgB;AACdC,MAAAA,GAAG,EAAE,CADS;AAEdC,MAAAA,IAAI,EAAE,CAFQ;AAGdC,MAAAA,QAAQ,EAAE;AAHI,KAAhB;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAA,2BAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBF,mBADF;AA4BD;;GArCuBN,O;;KAAAA,O","sourcesContent":["import { useEffect } from 'react';\nimport Head from 'next/head';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport {\n  Hero,\n  Info,\n  Details,\n  MockUps,\n  BthButton,\n  FooterPhrase,\n} from '../../components/projectsComponents';\nimport data from '../../public/data/projectsData.json';\n\nexport default function Project({ project }) {\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  }, []);\n\n  return (\n    <>\n      {/* <Head>\n        <title>\n          Project | {`${project['title1'].content}${project['title2'].content}`}\n        </title>\n      </Head>\n      <Header />\n      <Hero\n        titleFirst={project.title1}\n        titleSecond={project.title2}\n        subtitle={project.subtitle}\n      />\n      <Info description={project.description} year={project.year} />\n      <Details\n        title={project.detailsTitle}\n        subtitle={project.detailsSubTitle}\n        mockup={project.detailsMockup}\n        description={project.detailsDescription}\n        construction={project.detailsConstruction}\n      />\n      <MockUps mockups={project.mockups} />\n      <BthButton />\n      <FooterPhrase phrase={project.footerPhrase} autor={project.footerAutor} />\n      <Footer /> */}\n      <div>Hola</div>\n    </>\n  );\n}\n\nexport async function getStaticProps({ params }) {\n  // const project = data?.projects.filter(project => {\n  //   let title = project['title1'].content.concat('', project['title2'].content);\n  //   return (\n  //     title.toLocaleLowerCase().indexOf(params?.name?.toLocaleLowerCase()) === 0\n  //   );\n  // });\n  const project = data?.projects.forEach(project => {\n    let title = project['title1'].content.concat('', project['title2'].content);\n    console.log(\n      title.toLocaleLowerCase().indexOf(params?.name?.toLocaleLowerCase()) === 0\n    );\n  });\n  // console.log(\n  //   title.toLocaleLowerCase().indexOf(params?.name?.toLocaleLowerCase()) === 0\n  // );\n  return {\n    props: { project: project?.[0] || null },\n  };\n}\n\nexport async function getStaticPaths() {\n  const paths = data?.projectTitles.map(project => ({\n    params: {\n      name: project,\n    },\n  }));\n\n  return {\n    paths,\n    fallback: false,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}