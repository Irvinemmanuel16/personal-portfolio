{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/irvinemmanuel/projects/portfolio/pages/projects/[name].js\";\nexport var __N_SSG = true;\nexport default function Project({\n  project\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: project.title1.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["/home/irvinemmanuel/projects/portfolio/pages/projects/[name].js"],"names":["Project","project","title1","content"],"mappings":";;;AAEA,eAAe,SAASA,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AAC3C,sBAAO;AAAA,cAAMA,OAAO,CAACC,MAAR,CAAeC;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KAFuBH,O","sourcesContent":["import data from '../../public/data/projectsData.json';\n\nexport default function Project({ project }) {\n  return <div>{project.title1.content}</div>;\n}\n\nexport async function getStaticProps({ params }) {\n  const project = data?.projects.filter(project => {\n    let title = project['title1'].content.concat('', project['title2'].content);\n    return (\n      title.toLocaleLowerCase().indexOf(params?.name?.toLocaleLowerCase()) === 0\n    );\n  });\n  return {\n    props: { project: project[0] },\n  };\n}\n\nexport async function getStaticPaths() {\n  const paths = data?.projectTitles.map(project => ({\n    params: {\n      name: project,\n    },\n  }));\n\n  return {\n    paths,\n    fallback: false,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}